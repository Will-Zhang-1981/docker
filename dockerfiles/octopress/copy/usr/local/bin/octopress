#!/bin/sh

# A wrapper around Octopress that allows us to install your Octopress
# from /opt/octopress which is where we store the repository.

copy() {
  chpst -u jekyll:jekyll find "$1" ! -path "$1" -maxdepth 1 -exec cp -r {} "$2" \;
}

as_jekyll() {
  chpst -u jekyll:jekyll "$@"
}

install_feed() {
  if [ "$feeds" = "y" ]; then
    rm -rf public/atom.xml
    printf 'gem "jekyll-feed"\n' \
      >> Gemfile
  fi
}

install_color() {
  if [ "$colors" = "y" ]; then
    sed -ri 's/^\/\/\$/\$/' sass/custom/_colors.scss
    # ^ Hello world, you now have color!
  fi
}

install_sitemap() {
  if [ "$sitemap" = "y" ]; then
    printf 'gem "jekyll-sitemap"' >> Gemfile
    rm -rf public/sitemap.xml
  fi
}

remove_haml() {
  if [ "$sinatra" = "n" ]; then
    rm -rf plugins/haml.rb
    sed -ri "/^\s*gem\s+('|\")(haml)('|\")/d" \
      Gemfile
  fi
}

remove_sinatra() {
  if [ "$sinatra" = "n" ]; then
    sed -ri "/^\s*gem\s+('|\")(sinatra)('|\")/d" \
      Gemfile
  fi
}


if [ "$1" = "install" ]; then
  cat /usr/local/share/octopress/COPY.txt
  touch /tmp/copy-shown
  sleep 3

  if [ -f /srv/jekyll/Gemfile ] || [ -f /srv/jekyll/Gemfile.lock ]; then
    >&2 echo "You already have a Gemfile, please rename it."
  else
    read -p "E-Mail: " email
    read -p "Author: " author
    read -p "Description: " description
    read -p "Subtitle: " subtitle
    read -p "Title: " title
    read -p "URL: " url

    read -p "Use RDiscount? [y/n] " rdiscount
    [ "$rdiscount" = "y" ] && read -p "Enable SmartQuotes? [y/n] " \
      smartquotes || true

    read -p "Use Pygments? [y/n] " pygments
    read -p "Use Haml? [y/n] " haml
    read -p "Use Sinatra? [y/n] " sinatra
    read -p "Use Octopress Colors? [y/n] " colors
    read -p "Use jekyll-feeds? [y/n] " feeds
    read -p "Modernize for Jekyll 2.5+? [y/n] " \
      modernize

    export email="$email"
    export author="$author"
    export description="$description"
    export subtitle="$subtitle"
    export title="$title"
    export url="$url"

    export pygments="$pygments"
    export feeds="$feeds"
    export colors="$colors"
    export rdiscount="$rdiscount"
    export smartquotes="$smartquotes"
    export modernize="$modernize"
    export sinatra="$sinatra"
    export haml="$haml"

    cd /srv/jekyll
    copy /opt/octopress /srv/jekyll
    as_jekyll rake install > /dev/null 2> /tmp/err.out || \
      cat /tmp/err.out && rm -f /tmp/err.out

    cp -R /usr/local/share/octopress/_config.yml template.erb
    as_jekyll erb template.erb > _config.yml
    rm -rf template.erb

    as_jekyll mkdir -p stylesheets
    as_jekyll mv sass/screen.scss sass/octopress.scss
    as_jekyll printf -- '---\n---\n\n@import "octopress"\n' > \
      stylesheets/screen.scss

    install_feed
    install_color
    install_sitemap
    remove_sinatra
    remove_haml

    cp /usr/local/share/octopress/_styles.scss \
      sass/custom/_styles.scss

    if [ "$modernize" = "y" ]; then
      stmpdir=$(mktemp -d)
      mtmpdir=$(mktemp -d)

      chown -R jekyll:jekyll $mtmpdir
      chown -R jekyll:jekyll $stmpdir

      cd $mtmpdir
      rm -rf Rakefile
      copy /srv/jekyll $mtmpdir
      copy $mtmpdir/source $stmpdir
      copy $stmpdir $mtmpdir
      rm -rf .themes public \
        source $stmpdir

      mv sass _sass
      mv plugins _plugins
      as_jekyll find /srv/jekyll ! -path /srv/jekyll -maxdepth 1 -exec rm -rf {} \;
      copy $mtmpdir /srv/jekyll

      cd /srv/jekyll
      as_jekyll cp /usr/local/share/octopress/compass.rb _plugins/compass.rb
      sed -ri "s/require\s+'.\/plugins\//require_relative '/" _plugins/*
    fi
  fi
elif [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
  /usr/bin/octopress --help
  echo "  install               Installs Octopress for you. Docker ONLY."
  exit 0
else
  /usr/bin/octopress \
    "$@"
fi
